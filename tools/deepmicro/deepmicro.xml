<tool id="deepmicro" name="DeepMicro" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>
        Representation learning and classification framework
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools" />
    <expand macro="requirements" />
    <expand macro="version" />
    <command detect_errors="exit_code"><![CDATA[
        mkdir data &&
        mkdir results &&

        echo '$mode.mode_type'
        exit()

        ## default modes
        # if $mode.mode_type == "only_encoding_def":
            
            ln -s '$features' data/features.csv &&

            DM.py -r 1 -cd features.csv --pca --save_rep --no_clf &&
            DM.py -r 1 -cd features.csv --rp --save_rep --no_clf &&
            DM.py -r 1 -cd features.csv --ae -dm 20 --save_rep --no_clf &&
            DM.py -r 1 -cd features.csv --vae -dm 20 --save_rep --no_clf &&
            DM.py -r 1 -cd features.csv --cae -dm 20 --save_rep --no_clf
        # else if $mode.mode_type == "e_and_c_def":
            ln -s '$features' data/features.csv &&
            ln -s '$class_labels' data/labels.csv &&

            DM.py -r 1 -cd features.csv -cl labels.csv --pca --save_rep -m all&&
            DM.py -r 1 -cd features.csv -cl labels.csv --rp --save_rep -m all &&
            DM.py -r 1 -cd features.csv -cl labels.csv --ae -dm 20 --save_rep -m all &&
            DM.py -r 1 -cd features.csv -cl labels.csv --vae -dm 20 --save_rep -m all &&
            DM.py -r 1 -cd features.csv -cl labels.csv --cae -dm 20 --save_rep -m all 
        # else if $mode.mode_type == "only_encoding":
            #for $params in $parameter_set
                DM.py -r 1 -cd features.csv -cl labels.csv --ae -dm '$params.dm' --save_rep -m rf &&
            #end for
        echo done !
        ]]>
    </command>
    <inputs>
        <conditional name="mode">
            <param name="mode_type" type="select" label="Pipeline mode:" help="The pipeline can: 
            (a) create a latent representation of the data that can be used e.g. by fitting an custom 
            ML predictor (only encoding) or (b) create an encoding and cross validate a 
            classifier. The default mode applies a set of prefigured parameter sets as described in the help section." >
                <option value="only_encoding">Only encoding (custom)</option>
                <option value="e_and_c">Encoding and classification (custom)</option>
                <option value="only_encoding_def">Only encoding (default)</option>
                <option value="e_and_c_def">Encoding and classification (default)</option>
            </param>
            <when value="only_encoding">
                <param argument="--features" type="data" format="tabular" label="Feature table" help="Dataset containing the features of samples:"/>
                <repeat name="parameter_set" title="Parameter Set">
                    <conditional name="rl_type">
                        <param name="rl_type_choice" type="select" label="Representation learning type:" help="The type of representation learning." >
                            <option value="pca">PCA</option>
                            <option value="rp">Random Projection</option>
                            <option value="ae">Autoencoder or Deep Autoencoder</option>
                            <option value="vae">Variational Autoencoder</option>
                            <option value="cae">Convolutional Autoencoder</option>
                        </param>
                        <when value="ae">
                            <expand macro="dm" />                        
                        </when>
                        <when value="vae">
                            <expand macro="dm" />                          
                        </when>
                        <when value="cae">
                            <expand macro="dm" />  
                        </when>
                    </conditional>
                </repeat>
            </when>
            <when value="e_and_c">
                <param argument="--features" type="data" format="tabular" label="Feature table" help="Dataset containing the features of samples:"/>
                <param argument="--class_labels" type="data" format="tabular" label="Class labels" help="Dataset containing the class labels corresponding to the features:"/>
                <repeat name="parameter_set" title="Parameter Set">
                    <conditional name="rl_type">
                        <param name="rl_type_choice" type="select" label="Representation learning type:" help="The type of representation learning. `Train on input` trains the classifier on the input features without representation learning." >
                            <option value="pca">PCA</option>
                            <option value="rp">Random Projection</option>
                            <option value="ae">Autoencoder or Deep Autoencoder</option>
                            <option value="vae">Variational Autoencoder</option>
                            <option value="cae">Convolutional Autoencoder</option>
                            <option value="no_rl">Train on input</option>
                        </param>
                        <when value="no_rl">
                            <expand macro="clfs" />                    
                        </when>
                        <when value="pca">
                            <expand macro="clfs" />                    
                        </when>
                        <when value="rp">
                            <expand macro="clfs" />                    
                        </when>
                        <when value="ae">
                            <expand macro="dm" />   
                            <expand macro="clfs" />                    
                        </when>
                        <when value="vae">
                            <expand macro="dm" /> 
                            <expand macro="clfs" />                            
                        </when>
                        <when value="cae">
                            <expand macro="dm" /> 
                            <expand macro="clfs" />    
                        </when>
                    </conditional>
                </repeat>
            </when>
            <when value="only_encoding_def">
                <param argument="--features" type="data" format="tabular" label="Feature table" help="Dataset containing the features of samples:"/>
            </when>
            <when value="e_and_c_def">
                <param argument="--features" type="data" format="tabular" label="Feature table" help="Dataset containing the features of samples:"/>
                <param argument="--class_labels" type="data" format="tabular" label="Class labels" help="Dataset containing the class labels corresponding to the features:"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="results" format="tabular" from_work_dir="./results/*_result.txt" label="${tool.name} on ${on_string}: Results" />
        <collection name="encoded_features" type="list" label="Encoded Features">
            <discover_datasets directory="results" pattern="(?P&lt;designation&gt;.*)_rep\.csv" format="tabular" visible="false" />
        </collection>
    </outputs>
    <tests>
    </tests>
    <help>
        <![CDATA[
        DeepMicro is a deep representation learning framework exploiting various autoencoders 
        to learn robust low-dimensional representations from high-dimensional data and training
        classification models based on the learned representation.

        .. image:: ML_Workflow.png

        ]]>
    </help>
    <expand macro="citations" />
    <expand macro="creator" />
</tool>
