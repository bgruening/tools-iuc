<tool id="cactus" name="Cactus" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description>Whole-genome multiple sequence alignment.</description>
    <xrefs>
        <xref type="bio.tools">cactus</xref>
    </xrefs>
    <macros>
        <token name="@TOOL_VERSION@">2.0.5</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <container type="docker">quay.io/comparative-genomics-toolkit/cactus@sha256:c227e8d8aa41739667f54edbf19902d872dd07cba4c5046d613fe4ba2eb12a0d</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ## Set up seqfile
        
        #if $aln_mode.aln_mode_select == 'interspecies':
            cat $aln_mode.in_tree >> seqfile.txt &&
        #end if

        #for $seq in $in_seqs:
            #set seq_fn = str($seq.label) + '.' + $seq.fasta.ext
            ln -s '$seq.fasta' '$seq_fn' &&
            printf '%s %s\n' '$seq.label' '$seq_fn' >> seqfile.txt &&
        #end for

        cat seqfile.txt &&
    
        ## printf 'aln_mode: %s' $aln_mode

        #if $aln_mode.aln_mode_select == 'intraspecies':
            ## If we're doing a pangenome, we need to run the steps manually
            minigraph -xggs
            #for $seq in $in_seqs:
                $seq.fasta 
            #end for
            > pangenome.gfa
            &&
            cactus-graphmap
            ./jobStore
            ./seqfile.txt
            pangenome.gfa
            pangenome.paf 
            --outputFasta pangenome.gfa.fa
            --binariesMode local
            --workDir ./
            &&
            cactus-align
            ./jobStore
            ./seqfile.txt
            pangenome.paf 
            alignment.hal
            --pangenome
            --pafInput
            --binariesMode local
            --workDir ./
        #else if $aln_mode.aln_mode_select == 'interspecies':
            ## Run cactus normally
            cactus ./jobStore ./seqfile.txt ./alignment.hal 
            --root mr 
            --binariesMode local 
            --workDir ./
        #end if

        ## what are these for? 
        ## hal2fasta HALFILE $(halStats --root HALFILE) --subtree --upper > gfatemp.fa
        ## hal2paf HALFILE --hdf5InMemory --onlySequenceNames > gfatemp.paf
        ## seqwish -p gfatemp.paf -s gfatemp.fa -g out.gfa

        ## if assemblyhub output
        ## hal2assemblyHub.py WORKDIR HALFILE OUTDIR

        ## if pangenome (.pg) output
        ## hal2vg input.hal --hdf5InMemory --chop 32 --progress > output.pg
    ]]></command>
    <inputs>
        <conditional name="aln_mode">
            <param name="aln_mode_select" type="select" label="Alignment mode" help="The taxonomic relationship between input genomes. If genomes are within a single species, select 'Within-species'">
                <option value="interspecies" selected="true">Between-species</option>
                <option value="intraspecies">Within-species</option>
            </param>
            <when value="interspecies">
                <param name="in_tree" type="data" format="nhx" label="Guide tree" help="Phylogenetic tree in Newick format. Used by Cactus to achieve linear scaling with number of input genomes" />
            </when>
        </conditional>
        <repeat name="in_seqs" title="Input genome">
            <param name="label" type="text" value="" label="Genome Label" help="NO SPACES. Must be same name as appears in guide tree">
            </param>
            <param name="fasta" type="data" format="fasta" label="Genome Sequence" help="Input genome"/>
        </repeat>
    </inputs>
    <outputs>
        <data format="binary" name="out_hal" label="${tool.name} on ${on_string} Hal file" />
    </outputs>
    <tests>
        <!-- test interspecies mode -->
        <test expect_num_outputs="1">
            <conditional name="aln_mode">
                <param name="aln_mode_select" value="interspecies"/>
                <param name="in_tree" value="test_tree.nhx"/>
            </conditional>
            <repeat name="in_seqs">
                <param name="label" value="simCow_chr6"/>
                <param name="fasta" value="simCow_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simDog_chr6"/>
                <param name="fasta" value="simDog_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simHuman_chr6"/>
                <param name="fasta" value="simHuman_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simMouse_chr6"/>
                <param name="fasta" value="simMouse_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simRat_chr6"/>
                <param name="fasta" value="simRat_chr6.fasta"/>
            </repeat>
            <output name="out_hal" file="evolverMammals.hal" lines_diff="4" />
        </test>
        <!-- within-species mode -->
        <test expect_num_outputs="1">
            <conditional name="aln_mode">
                <param name="aln_mode_select" value="intraspecies"/>
            </conditional>
            <repeat name="in_seqs">
                <param name="label" value="simCow_chr6"/>
                <param name="fasta" value="simCow_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simDog_chr6"/>
                <param name="fasta" value="simDog_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simHuman_chr6"/>
                <param name="fasta" value="simHuman_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simMouse_chr6"/>
                <param name="fasta" value="simMouse_chr6.fasta"/>
            </repeat>
            <repeat name="in_seqs">
                <param name="label" value="simRat_chr6"/>
                <param name="fasta" value="simRat_chr6.fasta"/>
            </repeat>
            <output name="out_hal" file="within.hal" lines_diff="4" />
        </test>


    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

TODO: Fill in help in reStructuredText format (https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html)
Hint: If you want, you can preview your help section using this online editor: http://rst.ninjs.org/

Usage
.....


**Input**


**Output**


    ]]></help>
    <citations>
        <citation type="doi"> </citation>
    </citations>
</tool>