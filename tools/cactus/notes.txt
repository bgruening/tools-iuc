
testing stuff
docker run --name cactusdocker -v $(pwd):/data --rm -it quay.io/comparative-genomics-toolkit/cactus:v2.0.4 bash


Compute environment
    - execute as container
    - does not work on singularity. use docker.
    - do not use Toil Grid Engine-like batch systems 
    - tool destination should not use HTCondor or SLURM

Resources
    - Cactus uses substantial resources
    - requirements scale roughly quadratically
    - 120 CPU-days of compute per genome for 3 MB primate genomes (120 GB RAM peak)
    - 1.5 CPU-hours for two 1 MB bacterial genomes (14 GB RAM peak)


Running Cactus
basic structure:
cactus <jobStorePath> <seqFile> <outputHal>

jobStorePath: 
    - directory for cactus to write runtime files
seqFile:
    - Text file containing a phylogenetic tree and fasta paths. 
        NEWICK tree
        name1 path1
        name2 path2
        ...
        nameN pathN
    - Tree is there to allow Cactus to scale linearly with the number of input genomes
    - Allows progressive aliging up a guide tree
    - Guide tree DOES NOT WORK when aligning individuals of the same species
    - Provide an option 'within-species alignment' -> if true, tree is not required and minigraph -xggs process is initiated
outputHal:
    - output HAL filename
    - Hierarchical Alignment (HAL) Format
    - Created to efficiently store and index multiple genome alignments
    - important features to include in wrapper:
        - (hal2maf) hal2maf mammals.hal mammals.maf
        - (hal2vg) hal2vg input.hal --inMemory --chop 32 --progress > output.pg  NOTE --inMemory needs to be present
        - 

minigraph (within-species alignment): 




