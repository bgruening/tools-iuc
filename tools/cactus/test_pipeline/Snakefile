#!/usr/bin/env python3

def get_input(wildcards):
    return infiles[wildcards.genome]

cactus = (
    'docker://quay.io/comparative-genomics-toolkit/'
    'cactus@sha256:'
    'e871d782967a66d29488e4f6971aafb4568407f6d6833010bb521cba79e61500')

infiles = {
    'M-uni-chrs': 'Galaxy11-[M-uni-chrs.fasta.gz].fasta.gz',
    'R-biv-chrs': 'Galaxy12-[R-biv-chrs.fasta.gz].fasta.gz',
    'G-ser-chrs': 'Galaxy9-[G-ser-chrs.fasta.gz].fasta.gz'
}


rule target:
    input:
        'output/alignment.pg',
        'output/alignment.maf'

rule export_vg:
    input:
        'output/alignment.hal'
    output:
        'output/alignment.pg'
    log:
        'output/logs/export_vg.log'
    threads:
        1             # seems to be single threaded
    resources:
        time = 1440,     # one day
        mem_mb = 150000
    container:
        cactus
    shell:
        'hal2vg '
        '{input} '
        '--hdf5InMemory '
        '--chop 32 '
        '--progress '
        '> {output} '
        '2> {log}'


rule export_maf:
    input:
        'output/alignment.hal'
    output:
        'output/alignment.maf'
    log:
        'output/logs/export_maf.log'
    threads:
        1             # seems to be single threaded
    resources:
        time = 1440,     # one day
        mem_mb = 150000
    container:
        cactus
    shell:
        'hal2maf '
        '{input} '
        '{output} '
        '&> {log}'

rule cactus:
    input:
        fastas = expand('output/{genome}.fasta',
               genome=infiles.keys()),
        seqfile = 'seqfile.txt'
    output:
        'output/alignment.hal'
    params:
        workdir = 'output'
    log:
        'output/logs/cactus.log'
    threads:
        workflow.cores
    resources:
        time = 21600 * 2,   # 15 days
        mem_mb = 300000,
        partition = 'long'
    container:
        cactus
    shell:
        'cactus '
        '--maxCores {threads} '
        '--maxMemory {resources.mem_mb}M '
        'jobStore '
        '{input.seqfile} '
        'alignment.hal '
        '--binariesMode local '
        '--workDir {params.workdir} '
        '&> {log}'

rule gunzip:
    input:
        get_input
    output:
        'output/{genome}.fasta'
    log:
        'output/logs/gunzip.{genome}.log'
    container:
        cactus
    shell:
        'gunzip -c {input} > {output} 2> {log}'