<tool id="ncbi_fcs_gx" name="NCBI FCS GX" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" python_template_version="3.5" profile="@PROFILE@">
    <description>detects contamination from foreign organisms in genome sequences using the genome cross-species aligner (GX)</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology" />
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
#if $mode.mode_selector == "screen"
    ## copy data from local cache to shared memory
    #import os
    #set manifest_filename = os.path.basename($mode.database.fields.manifest)
    #set manifest_pathname = os.path.join($mode.database.fields.local_cache_dir, manifest_filename)
    #set tool_database_dir = os.path.join($mode.database.fields.tool_cache_dir, $mode.database.fields.value)
    mkdir -p '$tool_database_dir' &&
    sync_files.py get --mft '$manifest_pathname' --dir '$tool_database_dir' > /dev/null 2>&1 &&
    ## run gx
    ## should we make sure GALAXY_SLOTS <= 48?
    GX_NUM_CORES=\${GALAXY_SLOTS:-48} run_gx.py
        --fasta '$mode.fasta'
        --tax-id '$mode.tax_id'
        --species '$mode.species'
        --split-fasta '$mode.screen_adv.split_fasta'
    #if $mode.screen_adv.div:
        --div '$mode.screen_adv.div'
    #end if
        --gx-db '$tool_database_dir'
        --out-basename output
        --action-report true
        --generate-logfile false
#elif $mode.mode_selector == "clean"
    ## run gx
    ## should we make sure GALAXY_SLOTS <= 48?
    GX_NUM_CORES=\${GALAXY_SLOTS:-48} gx clean-genome
        --input '$mode.input'
        --action-report '$mode.action_report'
        --contam-fasta-out 'contam.fa'
        --min-seq-len '$mode.min_seq_len'
        --output 'clean.fa'
#end if
    ]]></command>
    <environment_variables>
        <environment_variable name="GX_ALIGN_EXCLUDE_TAXA">$getVar('mode.screen_adv.gx_align_exclude_taxa', '')</environment_variable>
    </environment_variables>
    <inputs>
        <conditional name="mode">
            <param name="mode_selector" type="select" label="Choose the mode">
                <option value="screen" selected="true">Screen genome</option>
                <option value="clean">Clean genome</option>
            </param>
            <when value="screen">
                <param name="database" type="select" >
                    <options from_data_table="ncbi_fcs_gx_databases">
                      <filter type="static_value" column="2" value="1" />
                      <validator message="No database is available" type="no_options"/>
                    </options>
                </param>
                <param argument="--fasta" type="data" format="fasta" label="Input file (Fasta file)" help="To detect contamination from foreign organisms, a genome assembly in a fasta file." />
                <!-- https://www.ncbi.nlm.nih.gov/taxonomy -->
                <param argument="--tax-id" type="text" label="Taxonomic identifier" help="The appropriate tax-id for your genome assembly.  The appropriate tax-id for an organism can be retrieved from the NCBI Taxonomy website." />
                <param argument="--species" type="text" label="Species binomial name" optional="true" />
                <section name="screen_adv" title="Advanced options">
                    <!-- comma separated list of taxa to ignore in GX_ALIGN_EXCLUDE_TAXA environment variable -->
                    <param name="gx_align_exclude_taxa" type="text" value="" optional="true" label="Taxonomic identifier(s) to exclude" help="Multiple tax-ids may be provided as a comma-separated list.">
                        <validator type="regex" message="comma separated integers">^\s*\d+\s*(,\s*\d+\s*)*$</validator>
                        <sanitizer invalid_char="">
                          <valid initial="string.digits">
                              <add value="," />
                          </valid>
                        </sanitizer>
                    </param>
                    <param argument="--split-fasta" type="boolean" checked="true" label="Split fasta sequences on N-runs of length at least 10" optional="true" />
                    <param argument="--div" type="text" value="" label="BLAST-div of the tax-id" help="from 'NCBI BLAST name' on taxon Info page" optional="true" />
                </section>
            </when>
            <when value="clean">
                <param argument="--input" type="data" format="fasta" label="Input file (Fasta file)" help="To detect contamination from foreign organisms, a genome assembly in a fasta file." />
                <param argument="--action-report" type="data" format="tabular" label="Select Action report" />
                <param argument="--min-seq-len" type="integer" value="200" label="Minimumm sequence length to keep" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <!-- mode == screen -->
        <data format="tabular" name="taxonomy_report" from_work_dir="output.taxonomy.rpt" label="${tool.name} on ${on_string}: Taxonomy report">
            <filter>mode['mode_selector'] == 'screen'</filter>
        </data>
        <data format="tabular" name="action_report" from_work_dir="output.fcs_gx_report.txt" label="${tool.name} on ${on_string}: Action report">
            <filter>mode['mode_selector'] == 'screen'</filter>
        </data>

        <!-- mode == clean -->
        <data format="fasta" name="contam_fasta" from_work_dir="contam.fa" label="${tool.name} on ${on_string}: Fasta for EXCLUDE entries">
            <filter>mode['mode_selector'] == 'clean'</filter>
        </data>
        <data format="fasta" name="clean_fasta" from_work_dir="clean.fa" metadata_source="mode.input" label="${tool.name} on ${on_string}: Cleaned Fasta">
            <filter>mode['mode_selector'] == 'clean'</filter>
        </data>
    </outputs>
    <tests>
        <!-- These settings require a db which doesn't exist in the test environment -->
        <test expect_num_outputs="2" expect_failure="true">
            <param name="mode_selector" value="screen" />
            <param name="fasta" value="fcsgx_test.fa.gz" ftype="fasta" />
            <param name="tax_id" value="6973" />
            <output name="taxonomy_report" file="output.taxonomy.rpt" compare="diff" lines_diff="2" />
            <output name="action_report" file="output.fcs_gx_report.txt" compare="diff" lines_diff="2" />
        </test>
    </tests>
    <help><![CDATA[
    FCS-GX detects contamination from foreign organisms in genome sequences using the genome cross-species aligner (GX). The FCS-GX executable retrieves a Docker or Singularity container and runs a pipeline to align sequences to a large database of NCBI genomes through modified k-mer seeds and assign a most likely taxonomic division.

    FCS-GX classifies sequences as contaminant when their taxonomic assignment is different from the user provided taxonomic identifier. A contamination summary provides an overview of observed contaminant divisions, counts, and total sizes, and an action report provides details and recommended actions for each problematic sequence.

    https://github.com/ncbi/fcs/wiki/FCS-GX
    ]]></help>
    <expand macro="citations" />
</tool>
