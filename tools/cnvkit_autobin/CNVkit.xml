<tool id="CNVkit autobin" name="CNVkit autobin" version="0.9.9" python_template_version="3.5">
    <description>Quickly estimate read counts or depths in a BAM file to estimate reasonable on- and (if relevant) off-target bin sizes.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[  
        ln -s '$bams' ./tumor.bam &&
        ln -s '$targets' ./capture.bed &&
        #if $advanced_settings.reference_source.fasta
            #if str($advanced_settings.reference_source.ref_selector) == 'history':
                ln -s '$advanced_settings.reference_source.fasta' ./genome.fa &&
                samtools faidx ./genome.fa 2>&1 || echo 'Error running samtools faidx for indexing fasta reference for CNVkit' >&2 &&
            #else
                ln -s '$advanced_settings.reference_source.fasta.fields.path' ./genome.fa &&
                cp '${advanced_settings.reference_source.fasta.fields.path}.fai' ./genome.fa.fai &&
            #end if
        #end if
        cnvkit.py autobin
            ./tumor.bam
            --targets ./capture.bed
    ]]></command>
        <configfiles>
        <configfile name="script_file"><![CDATA[
'$bams'
#if $advanced_settings.method == "hybrid"
    #set $method_val = "hybrid"
--method '$method_val'
#else
--method '$method'
#end if

--access '$advanced_settings.access'
--targets '$targets'
--bp-per-bin $advanced_settings.bp_per_bin
--target-max-size $advanced_settings.target_max_size
--target-min-size $advanced_settings.target_min_size
--antitarget-max-size $advanced_settings.antitarget_max_size
--antitarget-min-size $advanced_settings.antitarget_min_size
--annotate '$advanced_settings.annotate'
--short-names '$advanced_settings.short_names'
--target-output-bed '$advanced_settings.target_output_bed'
--antitarget-output-bed '$advanced_settings.antitarget_output_bed'
        ]]></configfile>
    </configfiles>
    <inputs>
        <param name="bams" type="data" format="bam" multiple="true" label="Input Sample BAM file(s)" help="to test for target coverage" />
        <param argument="--targets" type="data" format="bed" multiple="false" label="Input Potentially targeted genomic regions" help=" e.g. all possible exons for the reference genome. Format: BED, interval list, etc." />
        <section name="advanced_settings" title="Advanced settings" expanded="false">
            <expand macro="reference_interface" />
            <expand macro="optional" />
        </section>
    </inputs>
    <outputs>
        <data name="out_capture_target" format="bed" label="${tool.name} on ${on_string}: Capture target" from_work_dir="capture.target.bed" />
        <data name="out_capture_antitarget" format="bed" label="${tool.name} on ${on_string}: Capture antitarget" from_work_dir="capture.antitarget.bed" />
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="bams" ftype="bam" value="tumor.bam" />
            <param name="targets" ftype="bed" value="capture.bed" />
            <output name="out_capture_target" file="capture.target.bed" /> 
            <output name="out_sample_access" file="capture.antitarget.bed" /> 
        </test>
    </tests>
    <help><![CDATA[
    Quickly estimate read counts or depths in a BAM file to estimate reasonable on- and (if relevant) off-target bin sizes.
    ]]></help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1004873</citation>
    </citations>
</tool>
