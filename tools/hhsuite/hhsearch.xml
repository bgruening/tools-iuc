<tool id="hhsearch" name="HHsearch" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01">
    <description>detecting remote homologues of proteins</description>
    <macros>
        <token name="@TOOL_VERSION@">3.2.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
        <xml name="ffindex_single_inputs">
            <param name="ffdata" type="data" format="ffdata" label="Database" help="Database Data file." />
            <param name="ffindex" type="data" format="ffindex" label="Database Index" help="Database Index file." />
        </xml>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">hhsuite</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if $db_source.db_source_selector == 'indexed':
            ln -s '${db_source.ffindex.fields.path}.ffdata' hhdb_hhm.ffdata &&
            ln -s '${db_source.ffindex.fields.path}.ffindex' hhdb_hhm.ffindex &&
        #else
            ln -s '$db_source.ffdata' hhdb_hhm.ffdata &&
            ln -s '$db_source.ffindex' hhdb_hhm.ffindex &&
        #end if

        #if $db_source_cs219.db_source_selector == 'indexed':
            ln -s '${db_source_cs219.ffindex.fields.path}.ffdata' hhdb_cs219.ffdata &&
            ln -s '${db_source_cs219.ffindex.fields.path}.ffindex' hhdb_cs219.ffindex &&
        #else
            ln -s '$db_source_cs219.ffdata' hhdb_cs219.ffdata &&
            ln -s '$db_source_cs219.ffindex' hhdb_cs219.ffindex &&
        #end if

        $method
        -cpu \${GALAXY_SLOTS:-1}
        -e '$e'
        -i '$i'
        -d hhdb
        -o '$output'
    ]]>    </command>
    <inputs>
        <param argument="--i" type="data" format="fasta,hmm3" label="Query Sequence" help="Single sequence or multiple sequence alignment (MSA)
                in FASTA format, or HMM in hhm3 format." />
        <param name="method" type="select" display="radio" label="Search Method" help="Select a search method. See help below for more information.">
            <option value="hhsearch" selected="true">HHsearch</option>
            <option value="hhblits">HHblits</option>
        </param>
        <conditional name="db_source">
            <param name="db_source_selector" type="select" label="Custom or built-in HHM index" help="Built-ins have been indexed using ffindex">
                <option value="indexed" selected="true">Use a built-in index</option>
                <option value="history">Use a HHM index from history</option>
            </param>
            <when value="indexed">
                <param name="ffindex" type="select" label="Select ffindex" help="">
                    <options from_data_table="ffindex_indices">
                        <filter type="sort_by" column="0" />
                        <filter type="static_value" column="3" value="hhm" />
                        <validator type="no_options" message="No indices are available" />
                    </options>
                </param>
            </when>
            <when value="history">
                <expand macro="ffindex_single_inputs" />
            </when>
        </conditional>

        <conditional name="db_source_cs219">
            <param name="db_source_selector" type="select" label="Custom or built-in cs219 index" help="Built-ins have been indexed using ffindex">
                <option value="indexed" selected="true">Use a built-in index</option>
                <option value="history">Use a cs219 index from history</option>
            </param>
            <when value="indexed">
                <param name="ffindex" type="select" label="Select ffindex" help="">
                    <options from_data_table="ffindex_indices">
                        <filter type="sort_by" column="0" />
                        <filter type="static_value" column="3" value="cs219" />
                        <validator type="no_options" message="No indices are available" />
                    </options>
                </param>
            </when>
            <when value="history">
                <expand macro="ffindex_single_inputs" />
            </when>
        </conditional>
        <param name="e" type="float" value="0.001" min="0" max="1" label="E-value cutoff for inclusion in result alignment. (-e)" />
    </inputs>
    <outputs>
        <data format="hhr" name="output" />
    </outputs>
    <tests>
        <test>
            <param name="method" value="hhblits" />
            <param name="i" value="6VYB_A.fasta" />
            <conditional name="db_source">
                <param name="db_source_selector" value="history" />
                <param name="ffindex" value="dbCAN-fam-V8/dbCAN-fam-V8_hhm.ffindex" />
                <param name="ffdata" value="dbCAN-fam-V8/dbCAN-fam-V8_hhm.ffdata" />
            </conditional>
            <conditional name="db_source_cs219">
                <param name="db_source_selector" value="history" />
                <param name="ffindex" value="dbCAN-fam-V8/dbCAN-fam-V8_cs219.ffindex" />
                <param name="ffdata" value="dbCAN-fam-V8/dbCAN-fam-V8_cs219.ffdata" />
            </conditional>
            <output name="output" file="6VYB_A.hhr" lines_diff="4" ftype="hhr" />
        </test>
        <test>
            <param name="method" value="hhblits" />
            <param name="i" value="6VYB_A.fasta" />
            <conditional name="db_source">
                <param name="db_source_selector" value="indexed" />
                <param name="ffindex" value="hmm_dbcan" />
            </conditional>
            <conditional name="db_source_cs219">
                <param name="db_source_selector" value="indexed" />
                <param name="ffindex" value="cs219_dbcan" />
            </conditional>
            <output name="output" file="6VYB_A.hhr" lines_diff="4" ftype="hhr" />
        </test>
    </tests>
    <help><![CDATA[

**What it does**

HHsearch aligns a profile HMM against a database of target profile HMMs. The search first aligns the
query HMM with each of the target HMMs using the Viterbi dynamic programming algorithm, which finds the
alignment with the maximum score. The E-value for the target HMM is calculated from the Viterbi score. 
Target HMMs that reach sufficient significance to be reported are realigned using the Maximum Accuracy algorithm (MAC).
This algorithm maximizes the expected number of correctly aligned pairs of residues minus a penalty between 0 and 1.
Values near 0 produce greedy, long, nearly global alignments, values above 0.3 result in shorter, local alignments.

HHblits is an accelerated version of HHsearch that is fast enough to perform iterative searches through millions of profile HMMs,
e.g. through the Uniclust profile HMM databases, generated by clustering the UniProt database into clusters of globally alignable sequences. 
Analogously to PSI-BLAST and HMMER3, such iterative searches can be used to build MSAs by starting from a single query sequence.
Sequences from matches to profile HMMs below some E-value threshold (e.g. 10âˆ’3) are added to the query MSA for the next search iteration.

Download databases from: http://wwwuser.gwdg.de/~compbiol/data/hhsuite/databases/hhsuite_dbs/
    ]]>    </help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/bti125</citation>
    </citations>
</tool>