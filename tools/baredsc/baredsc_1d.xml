<tool id="baredsc_1d" name="baredSC 1d" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description>Compute distribution for a single gene</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_topics"/>
    <edam_operations>
        <edam_operation>operation_2495</edam_operation>
        <!-- only baredSC_2d:-->
        <edam_operation>operation_3463</edam_operation>
    </edam_operations>
    <xrefs>
        <xref type="bio.tools">baredsc</xref>
    </xrefs>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
    baredSC_1d
    ## Required inputs:
    @REQUIRED_INPUTS_1D@

    ## Filter cells
    @FILTER_CELLS@
    ## MCMC
    @MCMC_1D@
    ## Plots
    @PLOTS@
    ## Advanced
    @ADVANCED@
    ## Outputs
    --output output
    --figure baredSC.$plots.image_file_format
    --logevidence logevidence.txt &&
    mkdir QC &&
    mv baredSC_convergence.* QC &&
    mv baredSC_p.$plots.image_file_format QC &&
    mv baredSC_corner.* QC &&
    mkdir output &&
    mv baredSC_neff.txt output &&
    mv baredSC_pdf.txt output &&
    mv baredSC.$plots.image_file_format baredSC &&
    gunzip baredSC_means.txt.gz
    ]]></command>
    <inputs>
        <expand macro="macro_input_counts"/>
        <expand macro="macro_single_gene"/>
        <expand macro="macro_filter_cells"/>
        <section name="MCMC" title="MCMC parameters">
            <expand macro="macro_MCMC_params"/>
        </section>
        <section name="plots" title="Customize plots">
            <expand macro="macro_plots"/>
        </section>
        <section name="advanced" title="Advanced parameters" expanded="false">
            <expand macro="macro_advanced"/>
        </section>
    </inputs>
    <outputs>
        <data format="npz" name="output" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Numpy archive" from_work_dir="output.npz"/>
        <data format="txt" name="neff" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Neff" from_work_dir="output/baredSC_neff.txt"/>
        <collection type="list" name="qc_plots" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: QC plots">
            <discover_datasets pattern="baredSC_(?P&lt;identifier_0&gt;\S+)\.(?P&lt;ext&gt;.*)" directory="QC"/>
        </collection>
        <data format="txt" name="pdf" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: pdf with error bar" from_work_dir="output/baredSC_pdf.txt"/>
        <data format="png" name="plot" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: plot" from_work_dir="baredSC">
            <change_format>
                <when input="plots.image_file_format" value="png" format="png" />
                <when input="plots.image_file_format" value="svg" format="svg" />
                <when input="plots.image_file_format" value="pdf" format="pdf" />
            </change_format>
        </data>
        <collection type="list" name="other_outputs" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: plots and txt">
            <discover_datasets pattern="baredSC_(?P&lt;identifier_0&gt;\S+)\.(?P&lt;ext&gt;.*)"/>
        </collection>
        <data format="txt" name="logevidence" label="${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Log evidence" from_work_dir="logevidence.txt"/>
    </outputs>
    <tests>
        <!-- First test -->
        <test>
            <conditional name="input_counts">
                <param name="filetype" value="tabular"/>
                <param name="input" value="nih3t3_generated_2d_2.txt"/>
            </conditional>
            <param name="geneColName" value="0.5_0_0_0.5_x"/>
            <section name="MCMC">
                <param name="nnorm" value="1"/>
            </section>
            <section name="plots">
                <param name="title" value="first gene 1 gauss"/>
            </section>
            <output name="output">
                <assert_contents>
                    <has_size value="1257974" delta="100000"/>
                </assert_contents>
            </output>
            <output name="neff">
                <assert_contents>
                    <has_text_matching expression="^80[0-9][0-9]"/>
                </assert_contents>
            </output>
            <output_collection name="qc_plots" count="3" type="list">
                <element name="convergence" ftype="png">
                    <assert_contents>
                        <has_size value="23021" delta="2000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="png">
                    <assert_contents>
                        <has_size value="45302" delta="4000"/>
                    </assert_contents>
                </element>
                <element name="corner" ftype="png">
                    <assert_contents>
                        <has_size value="66254" delta="6000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="pdf">
                <assert_contents>
                    <has_text_matching expression="x\s+low\s+mean\s+high\s+median"/>
                    <has_n_lines n="101"/>
                    <has_line_matching expression="0.0125\s+0.2[0-9]+\s+0.2[0-9]+\s+0.2[0-9]+\s+0.2[0-9]+"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png">
                <assert_contents>
                    <has_size value="239991" delta="20000"/>
                </assert_contents>
            </output>
            <output_collection name="other_outputs" count="7" type="list">
                <element name="individuals" ftype="png">
                    <assert_contents>
                        <has_size value="54420" delta="5000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="txt">
                    <assert_contents>
                       <has_line_matching expression="name\s+low\s+median\s+high"/>
                       <has_line_matching expression="mu0\s+0.6[0-9]+\s+0.6[0-9]+\s+0.6[0-9]+"/>
                       <has_text_matching expression="scale0\s+0.3[0-9]+\s+0.3[0-9]+\s+0.3[0-9]+" />
                       <has_n_lines n="3"/>
                    </assert_contents>
                </element>
                <element name="with_posterior" ftype="png">
                    <assert_contents>
                        <has_size value="243443" delta="20000"/>
                    </assert_contents>
                </element>
                <element name="posterior_per_cell" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="2362"/>
                        <has_line_matching expression="mu\s+sd"/>
                    </assert_contents>
                </element>
                <element name="posterior_andco" ftype="png">
                    <assert_contents>
                        <has_size value="194143" delta="10000"/>
                    </assert_contents>
                </element>
                <element name="posterior_individuals" ftype="png">
                    <assert_contents>
                        <has_size value="135293" delta="10000"/>
                    </assert_contents>
                </element>
                <element name="means" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="75001"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="logevidence">
                <assert_contents>
                    <has_text_matching expression="^-42[0-9][0-9]"/>
                </assert_contents>
            </output>
        </test>
        <!-- Second test pdf filtering cells pretty-->
        <test>
            <conditional name="input_counts">
                <param name="filetype" value="tabular"/>
                <param name="input" value="nih3t3_generated_2d_2.txt"/>
            </conditional>
            <param name="geneColName" value="0.5_0_0_0.5_x"/>
            <conditional name="filter">
                <param name="nb" value="1"/>
                <param name="metadata1ColName" value="0_0.5_0.5_0_group"/>
                <param name="metadata1Values" value="1.0"/>
            </conditional>
            <section name="MCMC">
                <param name="nx" value="25"/>
                <param name="nnorm" value="2"/>
                <param name="nsampMCMC" value="20000"/>
                <conditional name="automaticRestart">
                    <param name="set_minNeff" value="yes"/>
                    <param name="minNeff" value="100"/>
                </conditional>
            </section>
            <section name="plots">
                <param name="image_file_format" value="pdf"/>
                <param name="prettyBins" value="200"/>
            </section>
            <output name="output">
                <assert_contents>
                    <has_size value="3622791" delta="300000"/>
                </assert_contents>
            </output>
            <output name="neff">
                <assert_contents>
                    <has_text_matching expression="^37[67]\."/>
                </assert_contents>
            </output>
            <output_collection name="qc_plots" count="3" type="list">
                <element name="convergence" ftype="pdf">
                    <assert_contents>
                        <has_size value="28497" delta="2000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="pdf">
                    <assert_contents>
                        <has_size value="438200" delta="40000"/>
                    </assert_contents>
                </element>
                <element name="corner" ftype="pdf">
                    <assert_contents>
                        <has_size value="242273" delta="20000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="pdf">
                <assert_contents>
                    <has_text_matching expression="x\s+low\s+mean\s+high\s+median"/>
                    <has_n_lines n="201"/>
                    <has_line_matching expression="0.0062[45][0-9]+\s+0.1[0-9]+\s+0.4[0-9]+\s+0.8[0-9]+\s+0.4[0-9]+"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="pdf">
                <assert_contents>
                    <has_size value="114053" delta="10000"/>
                </assert_contents>
            </output>
            <output_collection name="other_outputs" count="7" type="list">
                <element name="individuals" ftype="pdf">
                    <assert_contents>
                        <has_size value="150833" delta="10000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="txt">
                    <assert_contents>
                       <has_line_matching expression="name\s+low\s+median\s+high"/>
                       <has_line_matching expression="mu0\s+-0.1[0-9]+\s+0.2[0-9]+\s+0.3[0-9]+"/>
                       <has_text_matching expression="scale0\s+0.1[0-9]+\s+0.2[0-9]+\s+0.4[0-9]+" />
                       <has_n_lines n="6"/>
                    </assert_contents>
                </element>
                <element name="with_posterior" ftype="pdf">
                    <assert_contents>
                        <has_size value="114932" delta="10000"/>
                    </assert_contents>
                </element>
                <element name="posterior_per_cell" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="1164"/>
                        <has_line_matching expression="mu\s+sd"/>
                    </assert_contents>
                </element>
                <element name="posterior_andco" ftype="pdf">
                    <assert_contents>
                        <has_size value="41486" delta="4000"/>
                    </assert_contents>
                </element>
                <element name="posterior_individuals" ftype="pdf">
                    <assert_contents>
                        <has_size value="117700" delta="10000"/>
                    </assert_contents>
                </element>
                <element name="means" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="100000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="logevidence">
                <assert_contents>
                    <has_text_matching expression="^-20[0-9][0-9]\."/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <expand macro="helpcitations"/>
</tool>