
<tool id="compleasm_run" name="compleasm" version="@TOOL_VERSION@+galaxy0" profile="20.01">
    <description>run</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">compleasm</requirement>
    </requirements>
    <command><![CDATA[
    compleasm run
    -a '$input'
    -o galaxy
    
    #if $mode =="busco"
        --mode busco
    #elif $mode =="lite"
        --mode lite
    #end if

    -l '$lineage'

    #if str($specified_contigs) != '':
        --specified_contigs '$specified_contigs'
    #end if

    ]]></command>
    <inputs>
        <param argument="-a" name="input" type="data" format="fasta" label="Input genome file"/>
        <param name="mode" type="select" label="The mode of evaluation" help="If you want to use hmmsearch, select BUSCO mode. Otherwise select lite mode">
            <option value="busco" selected="true">BUSCO</option>
            <option value="lite">Lite</option>
        </param>
        <param argument="--specified_contigs" type="text" label="Specify the contigs to be evaluated (e.g. chr1 chr2 chr3)" optional="true" help="If not specified, all contigs will be evaluated"/>
        
        <!-- Some available lineages (compleasm list -remote) are not available for download. -->
        <param name="lineage" label="Choose the BUSCO lineage to be used" type="select" multiple="false" help="Eukaryota is the default line">
            <option value="eukaryota" selected="true">eukaryota</option>
            <option value="aconoidasida">aconoidasida</option>
            <option value="actinopterygii">actinopterygii</option>
            <option value="agaricales">agaricales</option>
            <option value="agaricomycetes">agaricomycetes</option>
            <option value="alveolata">alveolata</option>
            <option value="apicomplexa">apicomplexa</option>
            <option value="arachnida">arachnida</option>
            <option value="arthropoda">arthropoda</option>
            <option value="ascomycota">ascomycota</option>
            <option value="aves">aves</option>
            <option value="basidiomycota">basidiomycota</option>
            <option value="boletales">boletales</option>
            <option value="brassicales">brassicales</option>
            <option value="capnodiales">capnodiales</option>
            <option value="carnivora">carnivora</option>
            <option value="cetartiodactyla">cetartiodactyla</option>
            <option value="chaetothyriales">chaetothyriales</option>
            <option value="chlorophyta">chlorophyta</option>
            <option value="coccidia">coccidia</option>
            <option value="cyprinodontiformes">cyprinodontiformes</option>
            <option value="diptera">diptera</option>
            <option value="dothideomycetes">dothideomycetes</option>
            <option value="embryophyta">embryophyta</option>
            <option value="endopterygota">endopterygota</option>
            <option value="euarchontoglires">euarchontoglires</option>
            <option value="eudicots">eudicots</option>
            <option value="euglenozoa">euglenozoa</option>
            <option value="eukaryota">eukaryota</option>
            <option value="eurotiales">eurotiales</option>
            <option value="eurotiomycetes">eurotiomycetes</option>
            <option value="eutheria">eutheria</option>
            <option value="fabales">fabales</option>
            <option value="fungi">fungi</option>
            <option value="glires">glires</option>
            <option value="glomerellales">glomerellales</option>
            <option value="helotiales">helotiales</option>
            <option value="hemiptera">hemiptera</option>
            <option value="hymenoptera">hymenoptera</option>
            <option value="hypocreales">hypocreales</option>
            <option value="insecta">insecta</option>
            <option value="laurasiatheria">laurasiatheria</option>
            <option value="leotiomycetes">leotiomycetes</option>
            <option value="lepidoptera">lepidoptera</option>
            <option value="liliopsida">liliopsida</option>
            <option value="mammalia">mammalia</option>
            <option value="metazoa">metazoa</option>
            <option value="microsporidia">microsporidia</option>
            <option value="mollusca">mollusca</option>
            <option value="mucorales">mucorales</option>
            <option value="mucoromycota">mucoromycota</option>
            <option value="nematoda">nematoda</option>
            <option value="onygenales">onygenales</option>
            <option value="passeriformes">passeriformes</option>
            <option value="plasmodium">plasmodium</option>
            <option value="pleosporales">pleosporales</option>
            <option value="poales">poales</option>
            <option value="polyporales">polyporales</option>
            <option value="primates">primates</option>
            <option value="saccharomycetes">saccharomycetes</option>
            <option value="sauropsida">sauropsida</option>
            <option value="solanales">solanales</option>
            <option value="sordariomycetes">sordariomycetes</option>
            <option value="stramenopiles">stramenopiles</option>
            <option value="tetrapoda">tetrapoda</option>
            <option value="tremellomycetes">tremellomycetes</option>
            <option value="vertebrata">vertebrata</option>
            <option value="viridiplantae">viridiplantae</option>
        </param>
    
        <param name="outputs" type="select" multiple="true" label="Which outputs should be generated">
            <option value="full_table_busco" selected="true">full table busco</option>
            <option value="full_table">full table</option>
            <option value="miniprot">miniprot</option>
            <option value="translated_protein">translated proteins</option>
        </param>
    </inputs>

    <outputs>
        <data name='full_table_busco' format='tsv' label="${tool.name} on ${on_string}: full table BUSCO" from_work_dir="galaxy/*_odb10/full_table_busco_format.tsv">
            <filter>outputs and 'full_table_busco' in outputs</filter>
        </data>
        <data name='full_table' format='tsv' label="${tool.name} on ${on_string}: full table" from_work_dir="galaxy/*_odb10/full_table.tsv">
            <filter>outputs and 'full_table' in outputs</filter>
        </data>
        <data name='miniprot' format='gff3' label="${tool.name} on ${on_string}: Miniprot" from_work_dir="galaxy/*_odb10/miniprot_output.gff">
            <filter>outputs and 'miniprot' in outputs</filter>
        </data>
        <data name='translated_protein' format='fasta' label="${tool.name} on ${on_string}: Translated protein" from_work_dir="galaxy/*_odb10/translated_protein.fasta">
            <filter>outputs and 'translated_protein' in outputs</filter>
        </data>              
    </outputs>

    <tests>        
        <test expect_num_outputs="4">
            <param name="input" value="small_genome.fasta"/>
            <param name="mode" value="busco"/>
            <param name="lineage" value="eukaryota"/>
            <param name="outputs" value="full_table_busco,full_table,miniprot,translated_protein"/>
            <output name="full_table_busco">
                <assert_contents>
                    <has_text text="975158at2759"/>
                    <has_n_lines n="256"/>
                </assert_contents>
            </output>
            <output name="full_table">
                <assert_contents>
                    <has_text text="975158at2759"/>
                    <has_n_lines n="256"/>
                </assert_contents>
            </output>
            <output name="miniprot">
                <assert_contents>
                    <has_text text="##gff-version 3"/>
                    <has_text text="1001705at2759_1001832_1:0006d1"/>
                    <has_n_lines n="265701"/>
                </assert_contents>
            </output>
            <output name="translated_protein">
                <assert_contents>
                    <has_text text=">100698at2759_47790_0:001a33|NC_000962.3:149475-150576"/>
                    <has_text text="GRVVVVTGANTGIGYHTAAVFADRGAHVVLAVRNLEKGNAARARIMAARPGAHVTLQQLDLCSLDSVRAAADALRTAYPRIDVLINNAGVMW"/>
                    <has_n_lines n="1056"/>
                </assert_contents>
            </output>
        </test>
    </tests>

    <help><![CDATA[

    compleasm_ The run module assesses genome completeness based on genome assembly. 

    .. _compleasm: https://github.com/huangnengCSU/compleasm

    ]]>    
    </help>
    <expand macro="citation"></expand>
</tool>