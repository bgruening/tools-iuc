<tool id="compleasm_run" name="Compleasm" version="@TOOL_VERSION@+galaxy0" profile="20.01">
    <description>run</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">compleasm</requirement>
    </requirements>

    <command><![CDATA[
    compleasm run
    -a '$input'
    -o galaxy
    
    #if $mode =="busco"
        --mode busco
    #elif $mode =="lite"
        --mode lite
    #end if

    --specified_contigs '$specified_contigs'
    --min_diff $threshold_parameters.min_diff
    --min_identity $threshold_parameters.min_identity
    --min_length_percent $threshold_parameters.min_length_percent
    --min_complete $threshold_parameters.min_complete
   
    #if str($lineage.lineage) == "manual":
        -l '$busco_lineage'
    #elif str($lineage.lineage) == "auto":
        --autolineage
    #end if

    ]]></command>
    <inputs>
        <param argument="-a" name="input" type="data" format="fasta" label="Input genome file"/>

        <param name="mode" type="select" label="The mode of evaluation" help="If you want to use hmmsearch, select BUSCO mode. Otherwise select lite mode">
            <option value="busco" selected="true">BUSCO</option>
            <option value="lite">Lite</option>
        </param>

        <param argument="--specified_contigs" type="text" value="" label="Specify the contigs to be evaluated (e.g. chr1 chr2 chr3)" help="If not specified, all contigs will be evaluated">
            <sanitizer invalid_char="">
                <valid initial="string.letters,string.digits">
                    <add value="_" />
                </valid>
            </sanitizer>
            <validator type="regex">[0-9a-zA-Z_]+</validator>
        </param>

        <conditional name="lineage">
            <param name="lineage" type="select" label="Lineage">
                <option value="manual"> Specify lineage</option>
                <option value="auto" selected="true">autolineage</option>
            </param>
            <when value="manual">
                <param argument="-l" type="text" value="" label="Specify the name of the BUSCO lineage to be used" help="e.g. eukaryota, primates, saccharomycetes etc.">
                    <sanitizer invalid_char="">
                        <valid initial="string.letters,string.digits">
                            <add value="_" />
                        </valid>
                    </sanitizer>
                    <validator type="regex">[0-9a-zA-Z_]+</validator>
                </param>
                <param name="outputs" type="select" optional="true" multiple="true" label="Which outputs should be generated">
                    <option value="summary" selected="true">summary text</option>
                    <option value="full_table_busco">full table busco</option>
                    <option value="full_table">full table</option>
                    <option value="miniprot">miniprot</option>
                    <option value="gene_marker">gene marker</option>
                    <option value="translated_proteins">translated proteins</option>
                </param>
            </when> 
            <when value="auto">
                <param name="outputs" type="select" optional="true" multiple="true" label="Which outputs should be generated">
                    <option value="summary" selected="true">summary text</option>
                    <option value="full_table_busco">full table busco</option>
                    <option value="full_table ">full table</option>
                    <option value="miniprot">miniprot</option>
                    <option value="gene_marker">gene marker</option>
                    <option value="translated_proteins">translated proteins</option>
                    <option value="alignement">alignement</option>
                    <option value="alignement_masked">alignement masked</option>
                    <option value="placement">placement</option>
                </param>
            </when> 
        </conditional>

        <section name="threshold_parameters" title="Threshold parameters">
            <param argument="--min_diff" type="integer" min="0" max="1" value="0.2" label=" The thresholds for the best matching and second best matching"/>
            <param argument="--min_identity" type="integer" min="0" max="1" value="0.4" label="The identity threshold for valid mapping results"/>
            <param argument="--min_length_percent" type="integer" min="0" max="1" value="0.6" label="The fraction of protein for valid mapping results"/>
            <param argument="--min_complete" type="integer" min="0" max="1" value="0.9" label=" The length threshold for complete gene"/>
        </section>
    </inputs>

    <outputs>
        <data name='sum_manual' format='txt' label="${tool.name} on ${on_string}: summary" from_work_dir="galaxy/eukaryota*/summary.txt">
            <filter>lineage['lineage'] == 'manual' and outputs and 'summary' in outputs</filter>
        </data>
        <data name='sum_auto' format='txt' label="${tool.name} on ${on_string}: summaryfor autolinage" from_work_dir="galaxy/summary.txt">
            <filter>lineage['lineage'] == 'auto' and outputs and 'summary' in outputs</filter>
        </data>

        <data name='full_table_busco' format='tabular' label="${tool.name} on ${on_string}: full table BUSCO" from_work_dir="galaxy/eukaryota*/full_table_busco_format.tsv">
            <filter>outputs and 'full_table_busco' in outputs</filter>
        </data>
        <data name='full_table' format='tabular' label="${tool.name} on ${on_string}: full table" from_work_dir="galaxy/eukaryota*/full_table.tsv">
            <filter>outputs and 'full_table' in outputs</filter>
        </data>

        <data name='miniprot' format='gff3' label="${tool.name} on ${on_string}: Miniprot" from_work_dir="galaxy/eukaryota*/miniprot_output.gff">
            <filter>outputs and 'miniprot' in outputs</filter>
        </data>

        <data name='gene_marker' format='fasta' label="${tool.name} on ${on_string}: Gene marker" from_work_dir="galaxy/eukaryota*/gene_marker.fasta">
            <filter>outputs and 'gene_marker' in outputs</filter>
        </data>
        <data name='translated_protein' format='fasta' label="${tool.name} on ${on_string}: Translated protein" from_work_dir="galaxy/eukaryota*/translated_protein.fasta">
            <filter>outputs and 'translated_protein' in outputs</filter>
        </data>

        <data name='alignement' format='fasta' label="${tool.name} on ${on_string}: Alignement" from_work_dir="galaxy/sepp_output/output_alignment.fasta ">
            <filter>lineage['lineage'] == 'auto' and outputs and 'alignement' in outputs</filter>
        </data>
        <data name='alignement_masked' format='fasta' label="${tool.name} on ${on_string}: Alignement masked" from_work_dir="galaxy/sepp_output/output_alignment_masked.fasta">
            <filter>lineage['lineage'] == 'auto' and outputs and 'alignement_masked' in outputs</filter>
        </data>

        <data name='placement' format='json' label="${tool.name} on ${on_string}: Placement" from_work_dir="galaxy/sepp_output/output_placement.json">
            <filter>lineage['lineage'] == 'auto' and outputs and 'placement' in outputs</filter>
        </data>              
    </outputs>
    
    <tests>
        <test expect_num_outputs="6">
            <param name="input" value="input.fasta"/>
            <param name="mode" value="busco"/>
            <conditional name="lineage">
                <param name="lineage" value="manual"/>
                <param name="l" value="eukaryota"/>
                <param name="outputs" value="summary,full_table_busco,full_table,miniprot,genne_marker,translated_protein"/>
            </conditional>
            <output name="sum_auto" file="output_run/eukaryota/summary.txt" compare="diff" lines_diff="4"/>
            <output name="full_table_busco" file="output_run/eukaryota/full_table_busco_format.tsv" compare="diff" lines_diff="4"/>
            <output name="full_table" file="output_run/eukaryota/full_table.tsv" compare="diff" lines_diff="4"/>
            <output name="miniprot" ftype="gff3">
                <assert_contents>
                    <has_n_lines n="314009"/>
                </assert_contents>
            </output>
            <output name="gene_marker" file="output_run/eukaryota/gene_marker.fasta" compare="diff" lines_diff="4"/>
            <output name="translated_protein" file="output_run/eukaryota/translated_protein.fasta" compare="diff" lines_diff="4"/>
        </test>
        
        <test expect_num_outputs="9">
            <param name="input" value="input.fasta"/>
            <param name="mode" value="busco"/>
            <conditional name="lineage">
                <param name="lineage" value="auto"/>
                <param name="outputs" value="summary,full_table_busco,full_table,miniprot,genne_marker,translated_protein,alignement,alignement_masked,placement"/>
            </conditional>
            <output name="sum_auto" file="output_run/autolineage/summary.txt" compare="diff" lines_diff="4"/>
            <output name="full_table_busco" file="output_run/autolineage/full_table_busco_format.tsv" compare="diff" lines_diff="4"/>
            <output name="full_table" file="output_run/autolineage/full_table.tsv" compare="diff" lines_diff="4"/>
            <output name="miniprot" ftype="gff3">
                <assert_contents>
                    <has_n_lines n="314009"/>
                </assert_contents>
            </output>
            <output name="gene_marker" file="output_run/autolineage/gene_marker.fasta" compare="diff" lines_diff="4"/>
            <output name="translated_protein" file="output_run/autolineage/translated_protein.fasta" compare="diff" lines_diff="4"/>
            <output name="alignement" ftype="fasta">
                <assert_contents>
                    <has_n_lines n="2462"/>
                </assert_contents>
            </output>
            <output name="alignement_masked" ftype="fasta">
                <assert_contents>
                    <has_n_lines n="2462"/>
                </assert_contents>
            </output>
            <output name="placement" file="output_run/autolineage/output_placement.json" compare="diff" lines_diff="4"/>
        </test>
    </tests>
    <help><![CDATA[

    compleasm_ The run module assesses genome completeness based on genome assembly. 

    .. _compleasm: https://github.com/huangnengCSU/compleasm

    ]]>    
    </help>
    <expand macro="citation"/>
</tool>