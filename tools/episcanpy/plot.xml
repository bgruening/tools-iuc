<tool id="episcanpy_plot" name="Plot" version="@tool_version@+galaxy@version_suffix@" profile="@profile@">
    <description> with episcanpy</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="bio_tools"/>
    <expand macro="requirements"/>
    <stdio>
        <regex match="... storing" source="stderr" level="warning"/>
    </stdio>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
@CMD@
      ]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[
@CMD_imports@
@CMD_read_inputs@

#if $method.method == 'pp.coverage_cells'
#set plot_file = "coverage_cells." + str($format)
esc.pp.coverage_cells(
    adata,
    binary=$method.binary,
    log=$method.log,
    #if $method.threshold
    threshold=$method.threshold,
    #end if
    bins=$method.bins,
    save='$plot_file'
    )
#else if $method.method == 'pp.coverage_features'
#set plot_file = "coverage_features." + str($format)
esc.pp.coverage_features(
    adata,
    binary=$method.binary,
    log=$method.log,
    #if $method.threshold
    threshold=$method.threshold,
    #end if
    bins=$method.bins,
    save='$plot_file'
    )
#end if
@CMD_anndata_write_outputs@
]]></configfile>
    </configfiles>
    <inputs>
        <expand macro="inputs_anndata"/>
        <conditional name="method">
            <param argument="method" type="select" label="Method used for plotting">
                <option value="pp.coverage_cells">Coverage cells: Histogram of the number of open features (in the case of ATAC-seq data) per cell, using 'pp.coverage_cells'</option>
                <option value="pp.coverage_features">Coverage features: Distribution of the feature commoness in cells, using 'pp.coverage_features'</option>
            </param>
            <when value="pp.coverage_cells">
                <expand macro="coverage_params" />
            </when>
            <when value="pp.coverage_features">
                <expand macro="coverage_params" />
            </when>
        </conditional>
        <expand macro="param_plot_format"/>        
        <expand macro="inputs_common_advanced"/>
    </inputs>
    <outputs>
        <expand macro="anndata_outputs"/>
        <data name="coverage_cells_png" format="png" from_work_dir="coverage_cells.png" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'png' and method['method'] == 'pp.coverage_cells'</filter>
        </data>
        <data name="coverage_cells_pdf" format="pdf" from_work_dir="coverage_cells.pdf" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'pdf' and method['method'] == 'pp.coverage_cells'</filter>
        </data>
        <data name="coverage_cells_svg" format="png" from_work_dir="coverage_cells.svg" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'svg' and method['method'] == 'pp.coverage_cells'</filter>
        </data>
        <data name="coverage_features_png" format="png" from_work_dir="coverage_features.png" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'png' and method['method'] == 'pp.coverage_features'</filter>
        </data>
        <data name="coverage_features_pdf" format="pdf" from_work_dir="coverage_features.pdf" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'pdf' and method['method'] == 'pp.coverage_features'</filter>
        </data>
        <data name="coverage_features_svg" format="png" from_work_dir="coverage_features.svg" label="${tool.name} (${method.method}) on ${on_string}">
            <filter>format == 'svg' and method['method'] == 'pp.coverage_features'</filter>
        </data>
        <data name="hidden_output" format="txt" label="Log file" hidden="true" >
            <filter>advanced_common['show_log']</filter>
        </data>
    </outputs>
    <help><![CDATA[

Generic: XXX 
==================================

Wraps `seaborn.violinplot` for `anndata.AnnData`.

More details on the `scanpy documentation
<https://scanpy.readthedocs.io/en/latest/api/scanpy.pl.violin.html>`__
    ]]></help>
    <expand macro="citations"/>
</tool>
