<tool id="lineagespot" name="lineagespot" version="1.2.0">
    <description> Identifies SARS-CoV-2 related mutations based on a single (or a list) of variant(s) file(s).</description>
    <requirements>
        <requirement type="package" version="4.3.1">r-base</requirement>
        <requirement type="package" version="1.20.3">r-getopt</requirement>
        <requirement type="package" version="1.4.0">bioconductor-lineagespot</requirement>
        <requirement type="package" version="3.11">python</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
## Prepare lineage definitions
mkdir refs &&
#if str($voc_source.choice) == 'cached':
    python '${__tool_directory__}/convert_lineage_defs.py' -i '${constellations.release.fields.path}' -o refs &&
#end if

## Symlink the VCFs of all samples into a vcfs folder
## and all custom lineage definitions into refs/
sh arrange_custom_inputs.sh &&

Rscript '${__tool_directory__}/lineagespot_verbose.R'
  --in_vcf vcfs/
  --in_ref refs/
  #if str($ref_data.choice) == 'standard':
    --in_gff3 '${__tool_directory__}/NC_045512.2_annot.gff3'
  #else:
    --in_gff3 '$in_gff3'
  #end if
  --in_voc 'in_voc'
  --in_threshold $in_threshold
    ]]></command>
    <configfiles>
        <configfile filename="arrange_custom_inputs.sh"><![CDATA[mkdir vcfs &&
#for $vcf in $in_vcf:
  #set $sample_name = $vcf.element_identifier.replace("'", '_').replace('/', '_')
ln -s '$vcf' 'vcfs/${sample_name}.vcf' &&
#end for
#set $num_samples = len($in_vcf)
echo "Gathered $num_samples samples for lineagespot run."
#if str($voc_source.choice) == 'custom':
  #for $lineage_def in $voc_source.collection:
    #set $lineage_name = $lineage_def.element_identifier.replace("'", '_').replace('/', '_')
ln -s '$lineage_def' 'refs/${lineage_name}.txt' &&
#set $num_lineages = len(list($voc_source.collection))
  #end for
echo "Gathered $num_lineages custom lineage definitions for the analysis."
#end if]]></configfile>
    </configfiles>
    <inputs>
        <param type="data" name="in_vcf" format="vcf" multiple="true" label="vcf file(s)" />
        <conditional name="ref_data">
            <param name="choice" type="select" label="Reference data selection" help="Select built-in genome file to use built-in annotations for the SARS-CoV-2 reference sequence NC_045512.2. If you have mapped to a different reference, select custom genome file and provide an appropriate dataset with genomic feature annotations in gff format for it.">
                <option value="standard">Use built-in genome file</option>
                <option value="custom">Provide custom genome file</option>
            </param>
            <when value="standard" />
            <when value="custom">
                <param name="in_gff3" type="data" format="gff" label="Genes GFF" help="GFF input listing genes positions on the reference sequence" />
            </when>
        </conditional>
        <conditional name="voc_source">
            <param name="choice" type="select"
                   label="Source of lineage definitions"
                   help="Lineagespot detects lineage evidence based on lineage mutation patterns defined in tool-specific definition files. The Galaxy tool can also use lineage definitions released under cov-lineages/constellations and cached on the server.">
                <option value="cached">Lineage definitions from cached constellations data</option>
                <option value="custom">Collection of lineagespot-specific definitions in history</option>
            </param>
            <when value="cached">
                <param name="release" label="Cached constellations release" type="select">
                    <options from_data_table="pangolin_constellations">
                        <column name="value" index="0" />
                        <column name="description" index="1" />
                        <column name="date" index="3" />
                        <column name="path" index="4" />
                        <filter type="sort_by" column="3" />
                        <validator type="no_options" message="No cached constellations release available" />
                    </options>
                </param>
            </when>
            <when value="custom">
                <param name="collection" type="data_collection" collection_type="list" format="txt" label="Collection of lineage definitions" />
            </when>
        </conditional>
        <param type="text" name="in_voc" label="Names of lineages of interest" help="Out of all lineages defined in the lineage definitions source above only try to detect those provided here (as a comma-separated list)"/>
        <param type="float" name="in_threshold" value="0.8" label="AF threshold for identifying variants per sample" help="Variants in the input VCFs with an allele frequency less than the threshold will be ignored as noise in the lineage analysis."/>
    </inputs>
    <outputs>
        <data name="lineage_hits" format="tabular" from_work_dir="lineage_hits.txt" label="${tool.name} on ${on_string}: Lineage Hits"/>
        <data name="lineage_report" format="tabular" from_work_dir="lineage_report.txt" label="${tool.name} on ${on_string}: Lineage Report"/>
        <data name="variants_table" format="tabular" from_work_dir="variants_table.txt" label="${tool.name} on ${on_string}: Variants Table"/>
    </outputs>
    <tests>
        <test expect_num_outputs="3">
            <param name="in_vcf" value="SampleA_freebayes_ann.vcf,SampleB_freebayes_ann.vcf,SampleC_freebayes_ann.vcf"/>
            <conditional name="ref_data">
                <param name="choice" value="custom"/>
                <param name="in_gff3" value="NC_045512.2_annot.gff3"/>
            </conditional>
            <conditional name="voc_source">
                <param name="choice" value="custom"/>
                <param name="collection">
                    <collection type="list">
                        <element name="AY.1" ftype="txt" value="AY.1.txt"/>
                        <element name="B.1.617.2" ftype="txt" value="B.1.617.2.txt"/>
                        <element name="B.1.1.7" ftype="txt" value="B.1.1.7.txt"/>
                        <element name="B.1.351" ftype="txt" value="B.1.351.txt"/>
                        <element name="P.1" ftype="txt" value="P.1.txt"/>
                    </collection>
                </param>
            </conditional>
            <param name="in_voc" value="B.1.617.2,B.1.1.7,B.1.351,P.1"/>
            <output name="lineage_hits">
                <assert_contents>
                    <has_n_lines n="40"/>
                </assert_contents>
            </output>
            <output name="lineage_report">
                <assert_contents>
                    <has_n_lines n="731"/>
                </assert_contents>
            </output>
            <output name="variants_table">
                <assert_contents>
                    <has_n_lines n="1829"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        Reads VCF files and recognises SARS-CoV-2 related mutations.
    ]]></help>
    <citations>
        <citation type="bibtex">@article{Pechlivanis2022ER,
        author={Pechlivanis, Nikolaos and Tsagiopoulou, Maria and Maniou, Maria Christina and Togkousidis, Anastasis and Mouchtaropoulou, Evangelia and Chassalevris, Taxiarchisand Chaintoutis, Serafeim C. and Petala, Maria and Kostoglou, Margaritis and Karapantsios, Thodoris and Laidou, Stamatia and Vlachonikola, Elisavet and Chatzidimitriou, Anastasia and Papadopoulos, Agis and Papaioannou, Nikolaos and Dovas, Chrysostomos I. and Argiriou, Anagnostis and Psomopoulos, Fotis},
        title={Detecting SARS-CoV-2 lineages and mutational load in municipal wastewater and a use-case in the metropolitan area of Thessaloniki, Greece},
        journal={Scientific Reports},
        year={2022},
        month={Feb},
        day={17},
        volume={12},
        number={1},
        pages={2659},
        abstract={The COVID-19 pandemic represents an unprecedented global crisis necessitating novel approaches for, amongst others, early detection of emerging variants relating to the evolution and spread of the virus. Recently, the detection of SARS-CoV-2 RNA in wastewater has emerged as a useful tool to monitor the prevalence of the virus in the community. Here, we propose a novel methodology, called lineagespot, for the monitoring of mutations and the detection of SARS-CoV-2 lineages in wastewater samples using next-generation sequencing (NGS). Our proposed method was tested and evaluated using NGS data produced by the sequencing of 14 wastewater samples from the municipality of Thessaloniki, Greece, covering a 6-month period. The results showed the presence of SARS-CoV-2 variants in wastewater data. lineagespot was able to record the evolution and rapid domination of the Alpha variant (B.1.1.7) in the community, and allowed the correlation between the mutations evident through our approach and the mutations observed in patients from the same area and time periods. lineagespot is an open-source tool, implemented in R, and is freely available on GitHub and registered on bio.tools.},
        issn={2045-2322},
        doi = "10.1038/s41598-022-06625-6",
        url={https://doi.org/10.1038/s41598-022-06625-6}
        }</citation>
 </citations>
</tool>
