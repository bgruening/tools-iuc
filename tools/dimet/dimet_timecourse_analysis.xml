<tool id="dimet_@EXECUTABLE@" name="dimet_@EXECUTABLE@" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.05">
    <description>
        DIMet is a bioinformatics pipeline for differential analysis of isotopic targeted labeling data.
    </description>
    <macros>
        <token name="@EXECUTABLE@">timecourse_analysis</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
    #import json
    #import re
    mkdir -p '${report.extra_files_path}'/output/${suffix}-time_course_analysis/tables &&
    mkdir -p '${report.extra_files_path}'/raw &&
    mkdir -p '${report.extra_files_path}'/processed &&
    cp -R '$__tool_directory__/config' '${report.extra_files_path}'/config &&
    #set $statistical_test  = {}
    #set $impute_values  = {}
    #if $abundance_file:
        cp '$abundance_file' '${report.extra_files_path}'/raw/abundance.csv &&
        #silent $statistical_test['abundances']=str($files_to_analyse.abundance_stat_test)
        #silent $impute_values['abundances']=re.sub('"', '', "min")

    #end if
    #if $me_or_frac_contrib_file:
        cp '$me_or_frac_contrib_file' '${report.extra_files_path}'/raw/me_or_frac_contrib.csv &&
        #silent $statistical_test['mean_enrichment']=str($files_to_analyse.meanE_or_fracContrib_stat_test)
        #silent $impute_values['mean_enrichment']=re.sub('"', '', "min")
    #end if
    #if $isotop_abs_file:
        cp '$isotop_abs_file' '${report.extra_files_path}'/raw/isotop_abs.csv &&
        #silent $statistical_test['isotopologues']=str($files_to_analyse.isotopologue_abs_stat_test)
        #silent $impute_values['isotopologues']=re.sub('"', '', "min")
    #end if
    #if $isotop_prop_file:
        cp '$isotop_prop_file' '${report.extra_files_path}'/raw/isotop_prop.csv &&
        #silent $statistical_test['isotopologue_proportions']=str($files_to_analyse.isotopologue_prop_stat_test)
        #silent $impute_values['isotopologue_proportions']=re.sub('"', '', "min")
    #end if
    cp '$metadata_path' '${report.extra_files_path}'/raw/metadata.csv &&

    #set $conds = list()
    #for $co in $conditions:
        $conds.append(re.sub('"', '', str($co)))
    #end for
    #set $groups = list()
    #for $g in $grouping:
        $groups.append(re.sub('"', '', str($g)))
    #end for

    #set $comparisons = list()
    #if len($conds) > 1:
        #for $tp in $timepoint:

            #set $ctrl_found=False
            #set $ctrl=""
            #set $comparisons_bis = list()
            #for $co in $conditions:
                #set $sub_comparisons = list()
                #if str($co) in ["Control", "control","ctrl"]:
                    #set $ctrl_found=True
                    #set $ctrl=str($co)
                #else:
                    $sub_comparisons.append(re.sub('"', '', str($co)))
                    $sub_comparisons.append(re.sub('"', '', str($tp)))

                #end if
                $comparisons_bis.append($sub_comparisons)
            #end for

            #if $ctrl_found:
                $sub_comparisons.append(str($ctrl))
                $sub_comparisons.append(str($tp))
                $comparisons_bis.append($sub_comparisons)
            #end if

            $comparisons.append($comparisons_bis)
        #end for

    #else
        #set $sub_comparisons = list()
        #for $tp in $timepoint:
            #for $co in $conditions:
                $sub_comparisons.append(str($co)+'_'+str($tp))
            #end for
        #end for
        $comparisons.append($sub_comparisons)
    #end if

    HYDRA_FULL_ERROR=1 python -m dimet
        -cd '${report.extra_files_path}'/config
        -cn general_config_diff_time_course
        '++figure_path=figures'
        '++table_path=tables'
        '++hydra.run.dir='${report.extra_files_path}'/'${suffix}'-time_course_analysis'
        '++analysis={
            comparisons:${comparisons},
            statistical_test:${statistical_test},
            dataset:{
                _target_: data.DatasetConfig,
                label: example2,
                name: "I am a synthetic data example",
                subfolder: '${report.extra_files_path}',
                metadata: metadata,
                conditions: ${conds}
             },
             method:{
                _target_: method.TimeCourseAnalysisConfig,
                label: "time_course_analysis",
                name: "Time wise computation of statistical differences",
                grouping: ${groups},
                impute_values: ${impute_values},
                qualityDistanceOverSpan: -0.3,
                correction_method: "bonferroni",
                statistical_test: ${statistical_test}
              },
              label: time_course_analysis-example
         }'
         #if $abundance_file:
            '++analysis.dataset.abundances=abundance'
         #end if
         #if $me_or_frac_contrib_file:
            '++analysis.dataset.mean_enrichment=me_or_frac_contrib'
         #end if
         #if $isotop_prop_file:
            '++analysis.dataset.isotopologue_proportions=isotop_prop'
         #end if
         #if $isotop_abs_file:
            '++analysis.dataset.isotopologues=isotop_abs'
         #end if


    && cp '${report.extra_files_path}'/'${suffix}'-time_course_analysis/tables/*.tsv ./.
    && rm -r '${report.extra_files_path}'/raw
    && rm -r '${report.extra_files_path}'/config




    ]]></command>
    <inputs>
        <param name="abundance_file" type="data" format="tabular" label="Metabolite abundance file"/>
        <param name="me_or_frac_contrib_file" type="data" format="tabular" label="Mean enrichment or fraction contribution file"/>
        <param name="isotop_prop_file" type="data" format="tabular" label="Isotopologues proportion abundance file"/>
        <param name="isotop_abs_file" type="data" optional="true" format="tabular" label="Isotopologues absolute abundance file"/>
        <param name="metadata_path" type="data" format="tabular" label="metadata file"/>
        <param name="suffix" type="text" optional="false" label="suffix to add to output files" >
            <sanitizer invalid_char="">
                <valid initial="string.ascii_letters,string.digits">
                    <add value="_" />
                </valid>
            </sanitizer>
        </param>
        <param name="conditions" type="select" optional="false" multiple="true" label="Browse conditions from metadata file (2 Max.). You have to load a metadata file prior to have acccess to metabolite list">
            <options from_dataset="metadata_path">
                <column name="condition" index="1"/>
                <column name="value" index="1"/>
                <filter type="unique_value" name="condition" column="condition"/>
                <filter type="remove_value" value="condition"/>
                <!--                <filter type="sort_by" name="timepoint" column="1"/>-->
            </options>
            <sanitizer>
                <valid initial="default">
                    <add preset="string.printable"/>
                    <add value="\t"/>
                    <remove value="&quot;"/>
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param name="timepoint" type="select" optional="false" multiple="true" label="Browse timepoint from metadata file (2 Max.)">
            <options from_dataset="metadata_path">
                <column name="timepoint" index="2"/>
                <column name="value" index="2"/>
                <filter type="unique_value" name="timepoint" column="2"/>
                <filter type="remove_value" value="timepoint"/>
                <filter type="sort_by" name="timepoint" column="1"/>
            </options>
            <sanitizer>
                <valid initial="default">
                    <add preset="string.printable"/>
                    <add value="\t"/>
                    <remove value="&quot;"/>
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param name="grouping" type="select"  optional="false" multiple="true" label="Browse group to compare">
            <option value="condition" selected="true">condition</option>
            <option value="timepoint">timepoint</option>
        </param>
        <section name="files_to_analyse">
            <param name="abundance_stat_test" type="select" value="Tt" display="radio" label="Select statistical to apply to abundance file" help="Please enter at max 1 statistical test by file">
                <option value="Tt">t-test</option>
                <option value="MW">Mann Whitney</option>
                <option value="KW">Kruskall Wallis</option>
                <option value="ranksum">Wilcoxon's rank sum test</option>
                <option value="Wcox">Wilcoxon signed-rank test</option>
                <option value="BrMu">Brunner-Munzel test</option>
                <option value="prm-scipy">permutations test</option>
                <option value="disfit">distribution fitting (of the z-score of the ratios), disfit needs several hundreds of metabolites to be trustful.</option>
            </param>

            <param name="meanE_or_fracContrib_stat_test" type="select" value="Tt"  display="radio" label="Select statistical to apply" help="Please enter at max 1 statistical test by file">
                <option value="Tt">t-test</option>
                <option value="MW">Mann Whitney</option>
                <option value="KW">Kruskall Wallis</option>
                <option value="ranksum">Wilcoxon's rank sum test</option>
                <option value="Wcox">Wilcoxon signed-rank test</option>
                <option value="BrMu">Brunner-Munzel test</option>
                <option value="prm-scipy">permutations test</option>
                <option value="disfit">distribution fitting (of the z-score of the ratios), disfit needs several hundreds of metabolites to be trustful.</option>
            </param>
            <param name="isotopologue_prop_stat_test" type="select" value="Tt" display="radio" label="Select statistical to apply" help="Please enter at max 1 statistical test by file">
                <option value="Tt">t-test</option>
                <option value="MW">Mann Whitney</option>
                <option value="KW">Kruskall Wallis</option>
                <option value="ranksum">Wilcoxon's rank sum test</option>
                <option value="Wcox">Wilcoxon signed-rank test</option>
                <option value="BrMu">Brunner-Munzel test</option>
                <option value="prm-scipy">permutations test</option>
                <option value="disfit">distribution fitting (of the z-score of the ratios), disfit needs several hundreds of metabolites to be trustful.</option>
            </param>
            <param name="isotopologue_abs_stat_test" type="select" value="Tt" display="radio" label="Select statistical to apply" help="Please enter at max 1 statistical test by file">
                <option value="Tt">t-test</option>
                <option value="MW">Mann Whitney</option>
                <option value="KW">Kruskall Wallis</option>
                <option value="ranksum">Wilcoxon's rank sum test</option>
                <option value="Wcox">Wilcoxon signed-rank test</option>
                <option value="BrMu">Brunner-Munzel test</option>
                <option value="prm-scipy">permutations test</option>
                <option value="disfit">distribution fitting (of the z-score of the ratios), disfit needs several hundreds of metabolites to be trustful.</option>
            </param>
        </section>
    </inputs>

    <outputs>
        <data name="report" format="html">
            <discover_datasets pattern="__designation_and_ext__" directory="." visible="true" />
        </data>
    </outputs>
    <tests>
        <test>
            <param name="abundance_file" ftype="tabular" value="rawAbundances.csv" />
            <param name="me_or_frac_contrib_file" ftype="tabular" value="FracContribution_C.csv"/>
            <param name="metadata_path" ftype="tabular" value="example2_metadata.csv"/>
            <param name="isotop_prop_file" ftype="tabular" value="CorrectedIsotopologues.csv"/>
            <param name="suffix" value="toy1a001"/>
            <section name="files_to_analyse">
                <param name="abundance_stat_test" value="prm-scipy"/>
                <param name="meanE_or_fracContrib_stat_test" value="ranksum"/>
                <param name="isotopologue_prop_stat_test" value="disfit"/>
                <param name="isotopologue_abs_stat_test" value="disfit"/>
            </section>
            <param name="conditions" value='"Control","L-Cycloserine"'/>
            <param name="timepoint" value='"T0","T2h"'/>
            <param name="grouping" value="condition,timepoint"/>
            <output name="report" file="report.html" count="14"/>
        </test>
    </tests>
    <help><![CDATA[
    dimet @EXECUTABLE@

    **Input data files**

This tool performs a time course differential analysis on your time series data.

For illustration see the section **Metadata File Information** which contains several time points.

This time course differential analysis is sequential: by each individual condition, a comparison between the timepoints t_x+1 vs t_x
(e.g. [Control, 90min] vs [Control, 60min]), for all the timepoints present in the data.

Our tool automatically detects the conditions and timepoints, and automatically organizes the comparisons
(you do not need to set this part yourself, DIMet does it for you).

Note that if you need only to compare specific [condition, timepoint] pairs not comprised by
our automatic time course analysis, you can use the differential analysis in the pairwise mode instead.

This tool requires (at max.) 5 tab-delimited .cvs files as inputs. There are two types of files:

- The measures' (or quantifications') files, that can be of 4 types.

- The metadata, a unique file with the description of the samples in your measures' files. This is compulsory.

For running DIMet @EXECUTABLE@ you need **at least one** file of measures:

- The total **abundances** (of the metabolites) file

- The mean **enrichment** or labelled fractional contributions

- The **isotopologues** absolute values files (optional)

- The **isotopologue proportions** file (optional)

and one metadata file, WHICH IS COMPULSORY, see section **Metadata File Information**.

The measure's files must be organized as matrices:

- The first column must contain Metabolite IDs that are unique (not repeated) within the file.

- The rest of the columns correspond to the samples

- The rows correspond to the metabolites

- The values must be tab separated, with the first row containing the sample/column labels.

See the following examples of measures' files:

Example - Metabolites **abundances**:

    =============== ================== ================== ================== ================== ================== ==================
    ID              **MCF001089_TD01** **MCF001089_TD02** **MCF001089_TD03** **MCF001089_TD04** **MCF001089_TD05** **MCF001089_TD06**
    =============== ================== ================== ================== ================== ================== ==================
    2_3-PG          8698823.9926       10718737.7217      10724373.9         8536484.5          22060650           28898956
    2-OHGLu         36924336           424336             92060650           45165              84951950           965165051
    Glc6P           2310               2142               2683               1683               012532068          1252172
    Gly3P           399298             991656565          525195             6365231            89451625           4952651963
    IsoCit          0                  0                  0                  84915613           856236             954651610
    =============== ================== ================== ================== ================== ================== ==================

Example - mean **enrichment** or labeled fractional contributions:

    =============== ================== ================== ================== ================== ================== ==================
    ID              **MCF001089_TD01** **MCF001089_TD02** **MCF001089_TD03** **MCF001089_TD04** **MCF001089_TD05** **MCF001089_TD06**
    =============== ================== ================== ================== ================== ================== ==================
    2_3-PG          0.9711             0.968              0.9909             0.991              0.40               0.9
    2-OHGLu         0.01719            0.0246             0.554              0.555              0.73               0.68
    Glc6P           0.06               0.66               2683               0.06               2068               2172
    Gly3P           0.06               0.06               0.06               1                  5                  3
    IsoCit          0.06               1                  0.49               0.36               6                  10
    =============== ================== ================== ================== ================== ================== ==================

Example - **Isotopologues**

    =============== ================== ================== ================== ================== ================== ==================
    ID              **MCF001089_TD01** **MCF001089_TD02** **MCF001089_TD03** **MCF001089_TD04** **MCF001089_TD05** **MCF001089_TD06**
    =============== ================== ================== ================== ================== ================== ==================
    2_3-PG_m+0      206171.4626        285834.0353        36413.27637        27367.17784        6171.4626          119999
    2_3-PG_m+1      123                432                101                127                206171.4626        119999
    2_3-PG_m+2      133780.182         161461.2364        182631.3947        132170.3807        358749.348         848754.36
    2_3-PG_m+3      8358749.348        10271010.45        10505228.3         8376820.028        62163.30727        1088.8963
    2-OHGLu_m+0     5550339.322        6072872.833        3855047.791        3216178.72         8358749.348        10271010.45
    2-OHGLu_m+1     0.0                0.0                0.0                0.0                206171.4626        285834.0353
    =============== ================== ================== ================== ================== ================== ==================

Example - **Isotopologue proportions**:

    =============== ================== ================== ================== ================== ================== ==================
    ID              **MCF001089_TD01** **MCF001089_TD02** **MCF001089_TD03** **MCF001089_TD04** **MCF001089_TD05** **MCF001089_TD06**
    =============== ================== ================== ================== ================== ================== ==================
    2_3-PG_m+0      0.023701408        0.026667837        0.003395407        0.05955            0.034383527        0.12
    2_3-PG_m+1      0.0                0.0                0.0                0.0                0.4                0.12
    2_3-PG_m+2      0.015379329        0.01506            0.017029723        0.35483229         0.54131313         0.743
    2_3-PG_m+3      0.960919263        0.958268099        0.97957487         0.581310816        0.017029723        0.017
    2-OHGLu_m+0     0.972778716        0.960016157        0.238843937        0.234383527        0.9998888          0.015064063
    2-OHGLu_m+1     0.0                0.0                0.0                0.0                0.0001112          0.960919263
    =============== ================== ================== ================== ================== ================== ==================

**Metadata File Information**

Provide a tab-separated file that has the names of the samples in the first column and one header row.

Column names must be exactly in this order:
   name_to_plot
   condition
   timepoint
   timenum
   short_comp
   original_name

Example **Metadata File**:

    ==================== =============== ============= ============ ================ =================
    **name_to_plot**     **condition**   **timepoint** **timenum**  **short_comp**   **original_name**
    -------------------- --------------- ------------- ------------ ---------------- -----------------
    Spleen1_cell_0-1     Spleen1         0min            0           cell             MCF001089_TD01
    Spleen1_cell_0-2     Spleen1         0min            0           cell             MCF001089_TD02
    Spleen1_cell_10-1    Spleen1         10min           10          cell             MCF001089_TD03
    Spleen1_cell_10-2    Spleen1         10min           10          cell             MCF001089_TD04
    Spleen1_cell_30-1    Spleen1         30min           30          cell             MCF001089_TD05
    Spleen1_cell_30-2    Spleen1         30min           30          cell             MCF001089_TD06
    Spleen1_cell_60-1    Spleen1         60min           60          cell             MCF001089_TD07
    Spleen1_cell_60-2    Spleen1         60min           60          cell             MCF001089_TD08
    Spleen1_cell_90-1    Spleen1         90min           90          cell             MCF001089_TD09
    Spleen1_cell_90-2    Spleen1         90min           90          cell             MCF001089_TD011
    Spleen1_med_30-3     Spleen1         30min           30          med              MCF001089_TD025
    Spleen1_med_30-2     Spleen1         30min           30          med              MCF001089_TD023
    ==================== =============== ============= ============ ================ =================

The column **original_name** must have the names of the samples as given in your data.

The column **name_to_plot** must have the names as you want them to be (or set identical to original_name if you prefer). To set names that are meaningful is a better choice, as we will take them to display the results.

The column **timenum** must contain only the numeric part of the timepoint, for example 2,0, 10, 100 (this means, without letters ("T", "t", "s", "h" etc) nor any other symbol). Make sure these time numbers are in the same units (but do not write the units here!).

The column **short_comp** is an abbreviation, coined by you, for the compartments. This will be used for the results' files names: the longer the compartments names are, the longer the output files' names! Please pick short and clear abbreviations to fill this column.

** Running the analysis **

You can precise how you want your analysis to be executed, with the parameters:

- **datatypes** : the measures type(s) that you want to run

- **statistical_test** : choose, by type of measure, the specific statistical test to be applied.
 Kruskal-Wallis, Mann-Whitney, Wilcoxon’s signed rank test, Wilcoxon’s rank sum test
 t-test, and permutation test are currently offered (we use the trusted functions from scipy library https://docs.scipy.org/doc/scipy/reference/stats.html).

For the permutation test, we have established as test statistic, the absolute difference of geometric means of the two compared groups.

- **qualityDistanceOverSpan**: a normalized distance between the intervals of values of the compared groups, that is the cutoff for considering a minimal acceptable "separation". A 'distance/span' == 1 is a perfect separation, whereas if 'distance/span' < 0 there is no separation. To use with caution in case of important dispersion of your intra-group values. Default is -0.3 (not stringent)

- **correction_method** : one of the methods for multiple testing correction available in statsmodels library (bonferroni, fdr_bh, sidak, among others, see https://www.statsmodels.org/dev/generated/statsmodels.stats.multitest.multipletests.html).

There exist hints on use that will guide you, next to the parameters.

The output consist tables with the computed metrics, one by each pair of timepoints compared.

The number of output tables = number-of-conditions x (number-of-timepoints)-1 x number-of-compartments.

 ]]>
    </help>
    <expand macro="citations" />
</tool>