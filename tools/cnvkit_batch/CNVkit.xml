<tool id="CNVkit batch" name="CNVkit batch" version="0.9.9" python_template_version="3.5">
    <description>CNVkit pipeline for  copy-number changes and allelic imbalances detection</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[   
        ln -s '$CNV_reference.input_sample_file' ./tumor.bam &&
        samtools index ./tumor.bam 2>&1 || echo 'Error running samtools index for indexing bam file for CNVkit' >&2 &&
        #if str($CNV_reference.CNV_reference_availabel) == "yes":
            ln -s '$CNV_reference.reference' ./reference.cnn &&
        #end if 
        #if str($CNV_reference.CNV_reference_availabel) == "no":
            ln -s '$CNV_reference.normal' ./normal.bam &&
            #if $CNV_reference.advanced_settings.antitargets
                ln -s '$CNV_reference.advanced_settings.antitargets' ./antitargets.bed &&
            #end if
            #if $CNV_reference.advanced_settings.annotate
                ln -s '$CNV_reference.advanced_settings.annotate' ./annotate.bed &&
            #end if
            #if $CNV_reference.advanced_settings.access
                ln -s '$CNV_reference.advanced_settings.access' ./access.bed &&
            #end if
            ln -s '$CNV_reference.targets' ./capture.bed &&
            #if str($CNV_reference.reference_source.ref_selector) == 'history':
                ln -s '$CNV_reference.reference_source.fasta' ./genome.fa &&
                samtools faidx ./genome.fa 2>&1 || echo 'Error running samtools faidx for indexing fasta reference for CNVkit' >&2 &&
            #else
                ln -s '$CNV_reference.reference_source.fasta.fields.path' ./genome.fa &&
                cp '${CNV_reference.reference_source.fasta.fields.path}.fai' ./genome.fa.fai &&
            #end if
        #end if
        mkdir ./output &&
        cnvkit.py batch
            ./tumor.bam
            #if str($CNV_reference.CNV_reference_availabel) == "no":
                --normal ./normal.bam
                --targets ./capture.bed
                --fasta ./genome.fa
                #if $CNV_reference.advanced_settings.antitargets
                    --antitargets ./antitargets.bed
                #end if
                #if $CNV_reference.advanced_settings.annotate
                    --annotate ./annotate.bed
                #end if
                #if $CNV_reference.advanced_settings.access
                    --access ./access.bed
                #end if
            #end if
            #if str($CNV_reference.CNV_reference_availabel) == "yes":
                --reference ./reference.cnn
            #end if
            #if $output_section.scatter
                --scatter
            #end if
            #if $output_section.diagram
                --diagram
            #end if
    ]]></command>
        <configfiles>
        <configfile name="script_file"><![CDATA[
#import os
#set galaxy_slots = os.getenv("GALAXY_SLOTS", 4)
--processes $galaxy_slots
--output-dir = output
'$input_sample_file'
#if $CNV_reference.advanced_settings.method == "hybrid"
    #set $method_val = "hybrid"
--method '$method_val'
#else
--method '$CNV_reference.advanced_settings.method'
#end if
#if $CNV_reference.advanced_settings.segment_method == "cbs"
    #set $segment_method_val = "cbs"
--segment-method '$segment_method_val'
#else
--segment-method '$CNV_reference.advanced_settings.segment_method'
#end if
--male-reference '$CNV_reference.advanced_settings.male_reference'
--count-reads '$CNV_reference.advanced_settings.countreads'
--drop-low-coverage '$CNV_reference.advanced_settings.drop_low_coverage'
#if $output_section.scatter
--scatter = TRUE
#else
--scatter '$output_section.scatter'
#end if
#if $output_section.diagram
--diagram = TRUE
#else
--diagram '$output_section.diagram'
#end if
#if str($CNV_reference.CNV_reference_availabel) == "no":
    --normal '$CNV_reference.normal'
    --targets '$CNV_reference.targets'
    --short-names '$CNV_reference.advanced_settings.short_names'
    --antitargets '$CNV_reference.advanced_settings.antitargets'
    --annotate '$CNV_reference.advanced_settings.annotate'
    --target-avg-size $CNV_reference.advanced_settings.target_avg_size
    --access '$CNV_reference.advanced_settings.access'
    --antitarget-avg-size $CNV_reference.advanced_settings.antitarget_avg_size
    --antitarget-min-size $CNV_reference.advanced_settings.antitarget_min_size
    --cluster '$CNV_reference.advanced_settings.cluster'
#end if
#if str($CNV_reference.CNV_reference_availabel) == "yes":
    --reference '$CNV_reference.reference'
#end if
        ]]></configfile>
    </configfiles>
    <inputs>
        <conditional name="CNV_reference">
            <param name="CNV_reference_availabel" type="select" label="Do you have or whant to reuse a copy number reference file (.cnn)?" help="">
                <option value="no" selected="True">Creat a copy number reference file</option>
                <option value="yes">Reuse a copy number reference file</option>
            </param>
            <when value="no">
                <expand macro="create_CNV_reference_file" />
                <expand macro="reference_interface" />
                <section name="advanced_settings" title="Advanced settings" expanded="false">
                    <expand macro="advanced_no_reference" />
                    <expand macro="shared" />
                </section>
            </when>
            <when value="yes">
                <expand macro="reuse_an_existing_cnv_reference_file" />
                <section name="advanced_settings" title="Advanced settings" expanded="false">
                    <expand macro="shared" />
                </section>
            </when>
        </conditional>
        <expand macro="output_section" />
    </inputs>
    <outputs>
        <data name="out_sample_bintest" format="tabular" label="${tool.name} on ${on_string}: Sample Bintest " from_work_dir="tumor.bintest.cns" />
        <data name="out_sample_antitargetcoverage" format="tabular" label="${tool.name} on ${on_string}: Sample Antitarget Coverage" from_work_dir="tumor.antitargetcoverage.cnn" />
        <data name="out_sample_call" format="tabular" label="${tool.name} on ${on_string}: rounded absolute scale copy numbers integer (not log2 ratios) " from_work_dir="tumor.call.cns" />
        <data name="out_sample_targetcoverage_cnn" format="tabular" label="${tool.name} on ${on_string}: Sample Target Coverage " from_work_dir="tumor.targetcoverage.cnn" />
        <data name="out_sample_cns" format="tabular" label="${tool.name} on ${on_string}: CN segmentation calls" from_work_dir="tumor.cns" />
        <data name="out_sample_cnr" format="tabular" label="${tool.name} on ${on_string}: Bin-Level log2 Ratios/Coverages" from_work_dir="tumor.cnr" />
        <data name="out_capture_antitarget" format="bed" label="${tool.name} on ${on_string}: Capture Antitarget" from_work_dir="capture.antitarget.bed" />
        <data name="out_control_targetcoverage" format="tabular" label="${tool.name} on ${on_string}: Normal Sample Target Coverage" from_work_dir="normal.targetcoverage.cnn">
            <filter>(CNV_reference['CNV_reference_availabel']) == 'no'</filter>
        </data>
        <data name="out_control_antitargetcoverage" format="tabular" label="${tool.name} on ${on_string}: Normal Sample Antitarget Coverage" from_work_dir="normal.antitargetcoverage.cnn">
            <filter>(CNV_reference['CNV_reference_availabel']) == 'no'</filter>
        </data>
        <data name="out_reference_cnn" format="tabular" label="${tool.name} on ${on_string}: Copy Number Reference Profile" from_work_dir="reference.cnn">
            <filter>(CNV_reference['CNV_reference_availabel']) == 'no'</filter>
        </data>
        <data name="out_capture_target" format="bed" label="${tool.name} on ${on_string}: Capture Target" from_work_dir="capture.target.bed">
            <filter>(CNV_reference['CNV_reference_availabel']) == 'no'</filter>
        </data>
        <data name="out_sample_diagram_pdf" format="pdf" label="${tool.name} on ${on_string}: Sample Diagram" from_work_dir="tumor-diagram.pdf">
            <filter>output_section['diagram']</filter>
        </data>
        <data name="out_sample_scatter_png" format="png" label="${tool.name} on ${on_string}: Sample Scatter " from_work_dir="tumor-scatter.png">
            <filter>output_section['scatter']</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="13">
            <conditional name="reference_source">
                <param name="ref_selector" value="history"/>
                <param name="fasta" ftype="fasta" value="genome.fasta" />
            </conditional>
            <param name="CNV_reference_availabel" value="no" />
            <param name="input_sample_file" ftype="bam" value="tumor.bam" />
            <param name="normal" ftype="bam" value="normal.bam" />
            <param name="targets" ftype="bed" value="capture.bed" />
            <param name="scatter"  value="1" />
            <param name="diagram"  value="1" />
            <output name="out_sample_bintest" file="tumor.bintest.cns" />
            <output name="out_sample_antitargetcoverage" file="tumor.antitargetcoverage.cnn" />
            <output name="out_sample_call" file="tumor.call.cns" />
            <output name="out_sample_cnr" file="tumor.cnr" />
            <output name="out_sample_targetcoverage_cnn" file="tumor.targetcoverage.cnn" />
            <output name="out_sample_cns" file="tumor.cns" />
            <output name="out_capture_antitarget" file="capture.antitarget.bed" />
            <output name="out_control_targetcoverage" file="normal.targetcoverage.cnn" />
            <output name="out_control_antitargetcoverage" file="normal.antitargetcoverage.cnn" />
            <output name="out_reference_cnn" file="reference.cnn" />
            <output name="out_capture_target" file="capture.target.bed" />
            <output name="out_sample_scatter_png" file="tumor-scatter.png" />                        
            <output name="out_sample_diagram_pdf" file="tumor-diagram.pdf" ftype="pdf" compare="sim_size">
                <assert_contents><has_size value="6000" delta="2000" /></assert_contents>
            </output>
        </test>
        <test expect_num_outputs="9">
            <param name="CNV_reference_availabel" value="yes" />
            <param name="input_sample_file" ftype="bam" value="tumor.bam" />
            <param name="reference" ftype="tabular" value="reference.cnn" />
            <param name="scatter" value="1" />
            <param name="diagram"  value="1" />
            <output name="out_sample_bintest" file="tumor.bintest.cns" />
            <output name="out_sample_antitargetcoverage" file="tumor.antitargetcoverage.cnn" />
            <output name="out_sample_call" file="tumor.call.cns" />
            <output name="out_sample_cnr" file="tumor.cnr" />
            <output name="out_sample_targetcoverage_cnn" file="tumor.targetcoverage.cnn" />
            <output name="out_sample_cns" file="tumor.cns" />
            <output name="out_sample_targetcoverage_cnn" file="tumor.targetcoverage.cnn" />
            <output name="out_sample_diagram_pdf" file="tumor-diagram.pdf" ftype="pdf" compare="sim_size">
                <assert_contents><has_size value="6000" delta="2000" /></assert_contents>
            </output>
            <output name="out_sample_scatter_png" file="tumor-scatter.png" />
        </test>
    </tests>
    <help><![CDATA[
    CNVkit batch pipeline
    ]]></help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1004873</citation>
    </citations>
</tool>
